type SpeciesAssociations {
  people: [Person]
  films: [Film]
}

type SpeciesAttributes {
  classification: String
  designation: String
  averageHeight: String
  averageLifespan: String
  eyeColors: [String]
  hairColors: [String]
  skinColors: [String]
  language: String
  homeworld: Planet
}

type AllReturnSpecies {
  count: Int
  results: [Species]
}

type Species implements Node {
  id: ID!
  name: String
  entity: EntityEnum
  imageEntity: ImageEntity
  associations: SpeciesAssociations
  attributes: SpeciesAttributes
}

type Query {
  allSpecies(search: String, offset: Int, limit: Int): AllReturnSpecies
  species(id: ID): Species
}
