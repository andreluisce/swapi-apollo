type PersonAttributes {
  birthYear: String
  eyeColor: String
  gender: String
  hairColor: String
  height: String
  mass: String
  skinColor: String
  homeworld: Planet
}
type PersonAssociations {
  species: [Species]
  starships: [Starship]
  vehicles: [Vehicle]
  films: [Film]
}

type AllReturnPerson {
  count: Int
  page: Int
  results: [Person]
}

type Person implements Node {
  id: ID!
  name: String
  entity: EntityEnum
  imageEntity: ImageEntity
  associations: PersonAssociations
  attributes: PersonAttributes
}

type Query {
  allPeople(search: String, offset: Int, limit: Int): AllReturnPerson
  person(id: ID): Person
}
